name: CI â€” build toolkit & web-ui

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build toolkit and web-ui
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install & build toolkit (typescript/)
        working-directory: ./
        run: |
          npm ci --prefix typescript
          npm run build --prefix typescript

      - name: Install & build web-ui
        working-directory: ./
        run: |
          npm ci --prefix typescript/examples/web-ui
          npm run build --prefix typescript/examples/web-ui

      - name: Deploy to Vercel (optional)
        id: vercel_deploy
        run: |
          # Only deploy from main and when VERCEL_TOKEN is present. We can't reference
          # `secrets` directly in the `if:` expression at this level in some runners,
          # so check at runtime instead.
          if [ "${GITHUB_REF}" != "refs/heads/main" ]; then
            echo "Not on main branch; skipping Vercel deploy"
            echo "url=" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          if [ -z "${{ secrets.VERCEL_TOKEN }}" ]; then
            echo "VERCEL_TOKEN not set; skipping Vercel deploy"
            echo "url=" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          echo "Deploying web-ui to Vercel (production)"
          npm install -g vercel
          sudo apt-get update
          sudo apt-get install -y jq
          DEPLOY_JSON=$(vercel --prod --token "${{ secrets.VERCEL_TOKEN }}" --confirm --cwd typescript/examples/web-ui --yes --json)
          echo "Vercel output: $DEPLOY_JSON"
          URL=$(echo "$DEPLOY_JSON" | jq -r '.url')
          echo "url=$URL" >> "$GITHUB_OUTPUT"

      - name: Post-deploy health check
        if: ${{ steps.vercel_deploy.outputs.url != '' }}
        run: |
          echo "Health check: ${{ steps.vercel_deploy.outputs.url }}/api/health"
          # If a Vercel protection bypass token is set in repo secrets, send it as a header.
          if [ -n "${{ secrets.VERCEL_BYPASS_TOKEN }}" ]; then
            echo "Using Vercel protection bypass token for health check"
            HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" -H "x-vercel-protection-bypass: ${{ secrets.VERCEL_BYPASS_TOKEN }}" "${{ steps.vercel_deploy.outputs.url }}/api/health")
          else
            HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" "${{ steps.vercel_deploy.outputs.url }}/api/health")
          fi
          echo "Status: $HTTP_CODE"
          test "$HTTP_CODE" = "200"

      - name: Upload build logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: web-ui-build-logs
          path: |
            typescript/examples/web-ui/build.log